// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore
import { Provider, Address } from '../../../core';

/**
 * Faucet request transaction status.
 */
export enum FaucetRequestTransactionStatus
{
  Pending,
  Submitted,
  InLedger,
  Expired
}

/**
 * Result for a faucet request.
 */
export class FaucetRequestResult {

  /**
   * The transaction id of the transaction generated by this request.
   */
  txId: string;

  /**
   * Current status of the transaction generated by this request in the local chain .
   */
  status: FaucetRequestTransactionStatus;

  /**
   * Current depth of the transaction generated by this request in the local chain.
   */
  depth: number;

  /**
   * Absolute time at which the transaction generated by this reuqest was inserted in a block.
   */
  time: string;
}

/**
 * The faucet provider enable clients to request arbitrary amounts of tAda from current local network
 * to fund any address. This is useful for the setup of preconditions for end-to-end tests.
 */
export interface FaucetProvider extends Provider {

  /**
   * Request tAda to be transferred to the given address.
   * 
   * @param address The address where the tAda must be deposited.
   * @param amount  The amount of tAda to be debposited (in lovelace).
   * @param confirmation The number of blocks on top of our transaction needed to consider the transaction confirmed.
   * @param timeout The time we are willing to wait (in milliseconds) for the faucet request transaction to be confirmed.
   */
  request(address: string, amount: number, confirmations: number, timeout: number): Promise<FaucetRequestResult>;
}
