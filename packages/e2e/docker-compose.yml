version: '3.9'

x-logging: &logging
  logging:
    driver: 'json-file'
    options:
      max-size: '200k'
      max-file: '10'

services:
  local-testnet:
    <<: *logging
    build:
      context: ./local-network
    ports:
      - 3001:3001
    volumes:
      - ./local-network/network-files/node-sp1/:/root/network-files/node-sp1
      - ./local-network/config:/root/config
    depends_on:
      # We need the file server here in order to calculate the pool metadata hashes
      file-server:
        condition: service_healthy

  file-server:
    <<: *logging
    image: nginx:${NGINX_VERSION:-1.22.1-alpine}
    volumes:
      - ./local-network/file-server:/usr/share/nginx/html
    ports:
      - ${FILE_SERVER_PORT:-7890}:80
    environment:
      - NGINX_PORT=80
    healthcheck:
      test: ['CMD-SHELL', 'wget -O /dev/null http://localhost || exit 1']
      timeout: 10s

  cardano-node-ogmios:
    image: cardanosolutions/cardano-node-ogmios:v${OGMIOS_VERSION:-5.6.0}_${CARDANO_NODE_VERSION:-1.35.5}
    depends_on:
      local-testnet:
        condition: service_healthy
    volumes:
      - ./local-network/config/network:/config

  cardano-db-sync:
    depends_on:
      file-server:
        condition: service_healthy
    volumes:
      - ./local-network/config/network:/config

  cardano-wallet:
    <<: *logging
    image: inputoutput/cardano-wallet:2022.8.16
    volumes:
      - wallet-db:/wallet-db
      - node-ipc:/ipc
      - ./local-network/config:/config
    ports:
      - 8090:8090
    entrypoint: []
    command: bash -c "sleep 10 && ([[ $$NETWORK == \"mainnet\" ]] && $$CMD --mainnet) || ($$CMD --testnet /config/network/genesis/byron.json)"
    environment:
      CMD: 'cardano-wallet serve --node-socket /ipc/node.socket --database /wallet-db --listen-address 0.0.0.0'
      NETWORK:
    depends_on:
      cardano-db-sync:
        condition: service_healthy
    restart: on-failure

  provider-server:
    environment:
      - TOKEN_METADATA_SERVER_URL=stub://
    volumes:
      - ./local-network/config/network:/config

volumes:
  wallet-db:
