name: release

on:
  workflow_dispatch:

jobs:
  publish:
    strategy:
      matrix:
        os: [ ubuntu-20.04 ]
    runs-on: ${{ matrix.os }}
    steps:
    - name: ðŸ“¥ Checkout repository
      uses: actions/checkout@v3
      with:
        # Fetch all history for all tags and branches
        fetch-depth: 0
        ref: master
        token: ${{ secrets.BOT_GH_TOKEN }}

    - name: ðŸ§° Setup Node.js
      uses: actions/setup-node@v1
      with:
        node-version: 18.12.0
        registry-url: 'https://registry.npmjs.org'

    - name: Import bot's GPG key for signing commits
      id: import-gpg
      uses: crazy-max/ghaction-import-gpg@v5
      with:
        gpg_private_key: ${{ secrets.BOT_GPG_KEY }}
        passphrase: ${{ secrets.BOT_GPG_PASSPHRASE }}
        git_config_global: true
        git_user_signingkey: true
        git_commit_gpgsign: true

    - name: Install dependencies & git fetch nightly
      run: |
        # Create a local 'nightly' branch tracking origin/nightly
        git fetch origin nightly:nightly
        # Install dependencies and put yarn-project.nix to staging if it has any changes
        yarn install --immutable --inline-builds --mode=skip-build
        git checkout yarn-project.nix

    - name: Publish
      run: |
        # Base on nightly branch versions
        git merge --squash nightly
        # Omit nighly release CHANGELOG changes
        git checkout HEAD packages/*/CHANGELOG.md
        # Publish
        yarn publish:release --sign-git-commit --loglevel silly
        # Merge package.json/yarn.lock/CHANGELOG back to nightly
        git checkout nightly
        git merge --no-edit -s recursive -X theirs master
        git push --set-upstream origin nightly
      env:
        YARN_ENABLE_IMMUTABLE_INSTALLS: false
        NODE_AUTH_TOKEN: ${{ secrets.NPM_REGISTRY_TOKEN }}
        # Used for making a release
        GH_TOKEN: ${{ github.token }}
