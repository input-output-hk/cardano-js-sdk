# yq -y < std-unexploded.yml > workflows/std.yml
name: STD
on:
  workflow_dispatch:
  workflow_call:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master
env:
  AWS_REGION: us-east-1
  AWS_ROLE_ARN: arn:aws:iam::926093910549:role/lace-ci
  # NIX_UPLOAD_CACHE: s3://lace-nix-cache?region=us-east-1
  DISCOVERY_USER_NAME: gha-runner
  DISCOVERY_KNOWN_HOSTS_ENTRY: "65.109.126.156 ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIEOVVDZydvD+diYa6A3EtA3WGw5NfN0wv7ckQxa/fX1O"
permissions:
  id-token: write
  contents: read
concurrency:
  group: std-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  discover:
    outputs:
      hits: ${{ steps.discovery.outputs.hits }}
    runs-on: [self-hosted, discovery]
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2.2.0
        with:
          role-to-assume: ${{ env.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}
          # account is part of ecr url, thus part of `hits` output and needs to pass
          mask-aws-account-id: false
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Show commit
        # TODO: uncomment when nixbuild works well together with
        #       nix daemon mode on hosted runners
        # - uses: nixbuild/nixbuild-action@v17
        #   with:
        #     nixbuild_ssh_key: ${{ secrets.SSH_PRIVATE_KEY }}
        #     generate_summary_for: job

        shell: bash
        run: |
          echo commit: ${{ github.sha }}
      - uses: divnix/std-action/discover@main
        with: {ffBuildInstructions: true}
        id: discovery
  build:
    needs: discover
    name: ${{ matrix.target.jobName }}
    runs-on: ubuntu-latest
    if: fromJSON(needs.discover.outputs.hits).packages.build != '{}'
    strategy:
      matrix:
        target: ${{ fromJSON(needs.discover.outputs.hits).packages.build }}
    steps:
      - uses: nixbuild/nix-quick-install-action@v25
      - uses: nixbuild/nixbuild-action@v17
        with:
          nixbuild_ssh_key: ${{ secrets.SSH_PRIVATE_KEY }}
          generate_summary_for: job
      - uses: divnix/std-action/setup-discovery-ssh@main
        with:
          ssh_key: ${{ secrets.SSH_PRIVATE_KEY }}
          user_name: ${{ env.DISCOVERY_USER_NAME }}
          ssh_known_hosts_entry: ${{ env.DISCOVERY_KNOWN_HOSTS_ENTRY }}
      - name: Show commit
        shell: bash
        run: |
          echo commit: ${{ github.sha }}
      - uses: divnix/std-action/run@main
        with: {ffBuildInstructions: true, remoteStore: "ssh-ng://eu.nixbuild.net"}
  images:
    name: ${{ matrix.target.jobName }}
    runs-on: ubuntu-latest
    needs: [discover, build]
    if: fromJSON(needs.discover.outputs.hits).oci-images.publish != '{}'
    strategy:
      matrix:
        target: ${{ fromJSON(needs.discover.outputs.hits).oci-images.publish }}
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2.2.0
        with:
          role-to-assume: ${{ env.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - uses: nixbuild/nix-quick-install-action@v25
      - uses: nixbuild/nixbuild-action@v17
        with:
          nixbuild_ssh_key: ${{ secrets.SSH_PRIVATE_KEY }}
          generate_summary_for: job
      - uses: divnix/std-action/setup-discovery-ssh@main
        with:
          ssh_key: ${{ secrets.SSH_PRIVATE_KEY }}
          user_name: ${{ env.DISCOVERY_USER_NAME }}
          ssh_known_hosts_entry: ${{ env.DISCOVERY_KNOWN_HOSTS_ENTRY }}
      - name: Show commit
        shell: bash
        run: |
          echo commit: ${{ github.sha }}
      - uses: divnix/std-action/run@main
        with: {ffBuildInstructions: true, remoteStore: "ssh-ng://eu.nixbuild.net"}
  diff-to-eu:
    runs-on: ubuntu-latest
    needs: [discover, images]
    name: ${{ matrix.target.jobName }} (eu-central-1)
    env:
      AWS_REGION: eu-central-1
    permissions:
      id-token: write
      contents: read
      pull-requests: write
    if: fromJSON(needs.discover.outputs.hits).deployments.diff != '{}' && github.event_name == 'pull_request'
    strategy:
      matrix:
        target: ${{ fromJSON(needs.discover.outputs.hits).deployments.diff }}
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2.2.0
        with:
          role-to-assume: ${{ env.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}
      - uses: nixbuild/nix-quick-install-action@v25
      - uses: nixbuild/nixbuild-action@v17
        with:
          nixbuild_ssh_key: ${{ secrets.SSH_PRIVATE_KEY }}
          generate_summary_for: job
      - uses: divnix/std-action/setup-discovery-ssh@main
        with:
          ssh_key: ${{ secrets.SSH_PRIVATE_KEY }}
          user_name: ${{ env.DISCOVERY_USER_NAME }}
          ssh_known_hosts_entry: ${{ env.DISCOVERY_KNOWN_HOSTS_ENTRY }}
      - name: Configure K8S Cluster Access
        shell: bash
        run: |
          echo "Assuming role '$(aws sts get-caller-identity)' in cluster 'lace-prod-eu-central-1'."
          aws eks update-kubeconfig --name "lace-prod-eu-central-1"
      - name: Show commit
        shell: bash
        run: |
          echo commit: ${{ github.sha }}
      - uses: divnix/std-action/run@main
        env:
          BRANCH: ${{ github.ref_type == 'branch' && github.head_ref }}
          GH_TOKEN: ${{ github.token }}
          OWNER_AND_REPO: ${{ github.repository }}
        with: {ffBuildInstructions: true, remoteStore: "ssh-ng://eu.nixbuild.net"}
  deploy-to-eu:
    runs-on: ubuntu-latest
    needs: [discover, images]
    name: ${{ matrix.target.jobName }} (eu-central-1)
    env:
      AWS_REGION: eu-central-1
    permissions:
      id-token: write
      contents: read
      deployments: write
    environment:
      name: dev-preview
      url: https://backend.dev-preview.eks.lw.iog.io
    # Boolean input should be compared with string until https://github.com/actions/runner/issues/2238 resolved
    if: >
      fromJSON(needs.discover.outputs.hits).deployments.apply != '{}' && github.event_name == 'push' && github.ref == 'refs/heads/master'

    strategy:
      matrix:
        target: ${{ fromJSON(needs.discover.outputs.hits).deployments.apply }}
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2.2.0
        with:
          role-to-assume: ${{ env.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}
      - uses: nixbuild/nix-quick-install-action@v25
      - uses: nixbuild/nixbuild-action@v17
        with:
          nixbuild_ssh_key: ${{ secrets.SSH_PRIVATE_KEY }}
          generate_summary_for: job
      - uses: divnix/std-action/setup-discovery-ssh@main
        with:
          ssh_key: ${{ secrets.SSH_PRIVATE_KEY }}
          user_name: ${{ env.DISCOVERY_USER_NAME }}
          ssh_known_hosts_entry: ${{ env.DISCOVERY_KNOWN_HOSTS_ENTRY }}
      - name: Configure K8S Cluster Access
        shell: bash
        run: |
          echo "Assuming role '$(aws sts get-caller-identity)' in cluster 'lace-prod-eu-central-1'."
          aws eks update-kubeconfig --name "lace-prod-eu-central-1"
      - name: Show commit
        shell: bash
        run: |
          echo commit: ${{ github.sha }}
      - uses: divnix/std-action/run@main
        with: {ffBuildInstructions: true, remoteStore: "ssh-ng://eu.nixbuild.net"}
