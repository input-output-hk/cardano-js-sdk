# yq -y < std-unexploded.yml > workflows/std.yml
name: STD
on:
  workflow_dispatch:
    inputs:
      deploy:
        description: Deploy to dev-preview
        type: boolean
        required: true
        default: false
  workflow_call:
  pull_request:
    branches:
      - master
      - conway-era
      - dev-preview
  push:
    branches:
      - master
      - conway-era
      - dev-preview
    tags:
      - '@cardano-sdk/cardano-services**'
env:
  # NIX_UPLOAD_CACHE: s3://lace-nix-cache?region=us-east-1
  DISCOVERY_USER_NAME: gha-runner
  DISCOVERY_KNOWN_HOSTS_ENTRY: "65.109.126.156 ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIEOVVDZydvD+diYa6A3EtA3WGw5NfN0wv7ckQxa/fX1O"
concurrency:
  group: std-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  discover:
    outputs:
      hits: ${{ steps.discovery.outputs.hits }}
    runs-on: [self-hosted, discovery]
    env:
      AWS_REGION: us-east-1
      AWS_ROLE_ARN: arn:aws:iam::926093910549:role/lace-ci
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2.2.0
        with:
          role-to-assume: ${{ env.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}
          # account is part of ecr url, thus part of `hits` output and needs to pass
          mask-aws-account-id: false
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Show commit
        # TODO: uncomment when nixbuild works well together with
        #       nix daemon mode on hosted runners
        # - uses: nixbuild/nixbuild-action@v17
        #   with:
        #     nixbuild_ssh_key: ${{ secrets.SSH_PRIVATE_KEY }}
        #     generate_summary_for: job

        shell: bash
        run: |
          echo commit: ${{ github.sha }}
      - uses: divnix/std-action/discover@main
        with: {ffBuildInstructions: true}
        id: discovery


  images:
    name: ${{ matrix.target.jobName }}
    runs-on: ubuntu-latest
    needs: discover
    env:
      AWS_REGION: us-east-1
      AWS_ROLE_ARN: arn:aws:iam::926093910549:role/lace-ci
      # NIX_UPLOAD_CACHE: s3://lace-nix-cache?region=us-east-1
    permissions:
      id-token: write
      contents: read
    strategy:
      matrix:
        target: ${{ fromJSON(needs.discover.outputs.hits).oci-images && fromJSON(needs.discover.outputs.hits).oci-images.publish || fromJSON('["dummy-target"]') }}
    steps:
      - name: Configure AWS Credentials
        if: matrix.target != 'dummy-target'
        uses: aws-actions/configure-aws-credentials@v2.2.0
        with:
          role-to-assume: ${{ env.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Login to Amazon ECR
        if: matrix.target != 'dummy-target'
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - uses: nixbuild/nix-quick-install-action@v25
        if: matrix.target != 'dummy-target'
      - uses: nixbuild/nixbuild-action@v17
        if: matrix.target != 'dummy-target'
        with:
          nixbuild_ssh_key: ${{ secrets.SSH_PRIVATE_KEY }}
          generate_summary_for: job
      - uses: divnix/std-action/setup-discovery-ssh@main
        if: matrix.target != 'dummy-target'
        with:
          ssh_key: ${{ secrets.SSH_PRIVATE_KEY }}
          user_name: ${{ env.DISCOVERY_USER_NAME }}
          ssh_known_hosts_entry: ${{ env.DISCOVERY_KNOWN_HOSTS_ENTRY }}
      - name: Show commit
        shell: bash
        run: |
          echo commit: ${{ github.sha }}
      - uses: divnix/std-action/run@main
        if: matrix.target != 'dummy-target'
        with: {ffBuildInstructions: true, remoteStore: "ssh-ng://eu.nixbuild.net"}


  # TODO: remove all hardcoded instances of `dev-preview` in the next iteration
  diff-to-us:
    needs: images
    name: Diff & Comment (dev-preview)
    if: github.event_name == 'pull_request' && (github.base_ref == 'master')
    permissions:
      contents: read
      pull-requests: write
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: nixbuild/nix-quick-install-action@v25
      - uses: nixbuild/nixbuild-action@v17
        with:
          nixbuild_ssh_key: ${{ secrets.SSH_PRIVATE_KEY }}
          generate_summary_for: job
      # Further steps assume AWS_PROFILE=lw, while the official action has no way to specify that profile:
      - name: Set up AWS credentials
        run: |
          mkdir -p ~/.aws

          cat <<EOF >~/.aws/credentials
          [lw]
          aws_access_key_id = ${{ secrets.AWS_ACCESS_KEY}}
          aws_secret_access_key = ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          EOF

          cat <<EOF >~/.aws/config
          [lw]
          region = us-east-1
          EOF
      - uses: divnix/std-action/setup-discovery-ssh@main
        with:
          ssh_key: ${{ secrets.SSH_PRIVATE_KEY }}
          user_name: ${{ env.DISCOVERY_USER_NAME }}
          ssh_known_hosts_entry: ${{ env.DISCOVERY_KNOWN_HOSTS_ENTRY }}
      - name: Generate the Diff
        run: |
          nix develop .#x86_64-linux.local.envs.main -L --command bash -c '
            set -euo pipefail

            export AWS_PROFILE="lw"
            export AWS_REGION="us-east-1"

            nix run -L ".#cardano-services.dev-preview@us-east-1.plan" | tee k8s-plan.diff
          '
      - name: Post Comment on the PR
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          prNumber=$(cut -d/ -f1 <<<'${{ github.ref_name }}')
          gh pr comment "$prNumber" --body "$(
            echo '<details>'
            echo "<summary>$(head -n 1 k8s-plan.diff)</summary>"
            echo
            echo '```diff'
            tail -n +2 k8s-plan.diff
            echo '```'
            echo '</details>'
          )"


  # TODO: remove all hardcoded instances of `dev-preview` in the next iteration
  deploy-to-us:
    if: (github.event_name == 'push' && github.ref_name == 'master') || (github.event_name == 'workflow_dispatch' && inputs.deploy)
    needs: [images]
    concurrency:
      # Only one deployment at a time per environment, and wait for the previous one to finish:
      group: deploy-dev-preview
      cancel-in-progress: false
    name: Deploy (dev-preview)
    runs-on: ubuntu-22.04
    environment:
      name: dev-preview
      url: https://dev-preview.lw.iog.io/
    steps:
      - uses: actions/checkout@v4
      - uses: nixbuild/nix-quick-install-action@v25
      - uses: nixbuild/nixbuild-action@v17
        with:
          nixbuild_ssh_key: ${{ secrets.SSH_PRIVATE_KEY }}
          generate_summary_for: job
      # Further steps assume AWS_PROFILE=lw, while the official action has no way to specify that profile:
      - name: Set up AWS credentials
        run: |
          mkdir -p ~/.aws

          cat <<EOF >~/.aws/credentials
          [lw]
          aws_access_key_id = ${{ secrets.AWS_ACCESS_KEY}}
          aws_secret_access_key = ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          EOF

          cat <<EOF >~/.aws/config
          [lw]
          region = us-east-1
          EOF
      - uses: divnix/std-action/setup-discovery-ssh@main
        with:
          ssh_key: ${{ secrets.SSH_PRIVATE_KEY }}
          user_name: ${{ env.DISCOVERY_USER_NAME }}
          ssh_known_hosts_entry: ${{ env.DISCOVERY_KNOWN_HOSTS_ENTRY }}
      - name: Deploy to K8s
        run: |
          nix develop .#x86_64-linux.local.envs.main -L --command bash -c '
            set -euo pipefail

            export AWS_PROFILE="lw"
            export AWS_REGION="us-east-1"

            echo yes | nix run -L ".#cardano-services.dev-preview@us-east-1.apply"
          '
