name: Continuous Integration - E2E BF

env:
  TL_DEPTH: ${{ github.event.pull_request.head.repo.fork && '0' || fromJson(vars.TL_DEPTH) }}
  TL_LEVEL: ${{ github.event.pull_request.head.repo.fork && 'info' || vars.TL_LEVEL }}
  # -----------------------------------------------------------------------------------------
  DB_SYNC_CONNECTION_STRING: 'postgresql://postgres:doNoUseThisSecret!@localhost:5435/cexplorer'
  KEY_MANAGEMENT_PROVIDER: 'inMemory'
  KEY_MANAGEMENT_PARAMS: '{"bip32Ed25519": "Sodium", "accountIndex": 0, "chainId":{"networkId": 0, "networkMagic": 888}, "passphrase":"some_passphrase","mnemonic":"vacant violin soft weird deliver render brief always monitor general maid smart jelly core drastic erode echo there clump dizzy card filter option defense"}'
  OGMIOS_URL: 'ws://localhost:1340/'
  STAKE_POOL_CONNECTION_STRING: 'postgresql://postgres:doNoUseThisSecret!@localhost:5435/stake_pool'
  STAKE_POOL_TEST_CONNECTION_STRING: 'postgresql://postgres:doNoUseThisSecret!@localhost:5435/stake_pool_test'
  TEST_CLIENT_ASSET_PROVIDER: 'blockfrost'
  TEST_CLIENT_ASSET_PROVIDER_PARAMS: '{"baseUrl":"http://localhost:3015"}'
  TEST_CLIENT_CHAIN_HISTORY_PROVIDER: 'blockfrost'
  TEST_CLIENT_CHAIN_HISTORY_PROVIDER_PARAMS: '{"baseUrl":"http://localhost:3015"}'
  TEST_CLIENT_DREP_PROVIDER: 'blockfrost'
  TEST_CLIENT_DREP_PROVIDER_PARAMS: '{"baseUrl":"http://localhost:3015"}'
  TEST_CLIENT_HANDLE_PROVIDER: 'http'
  TEST_CLIENT_HANDLE_PROVIDER_PARAMS: '{"baseUrl":"http://localhost:4011/"}'
  TEST_CLIENT_NETWORK_INFO_PROVIDER: 'blockfrost'
  TEST_CLIENT_NETWORK_INFO_PROVIDER_PARAMS: '{"baseUrl":"http://localhost:3015"}'
  TEST_CLIENT_REWARDS_PROVIDER: 'blockfrost'
  TEST_CLIENT_REWARDS_PROVIDER_PARAMS: '{"baseUrl":"http://localhost:3015"}'
  TEST_CLIENT_TX_SUBMIT_PROVIDER: 'http'
  TEST_CLIENT_TX_SUBMIT_PROVIDER_PARAMS: '{"baseUrl":"http://localhost:4000/"}'
  TEST_CLIENT_UTXO_PROVIDER: 'blockfrost'
  TEST_CLIENT_UTXO_PROVIDER_PARAMS: '{"baseUrl":"http://localhost:3015"}'
  TEST_CLIENT_REWARD_ACCOUNT_INFO_PROVIDER: 'blockfrost'
  TEST_CLIENT_REWARD_ACCOUNT_INFO_PROVIDER_PARAMS: '{"baseUrl":"http://localhost:3015"}'
  TEST_CLIENT_STAKE_POOL_PROVIDER: 'http'
  TEST_CLIENT_STAKE_POOL_PROVIDER_PARAMS: '{"baseUrl":"http://localhost:4000/"}'
  WS_PROVIDER_URL: 'http://localhost:4100/ws'

on:
  pull_request:
  push:
    branches: ['master']
    tags: ['*.*.*']

jobs:
  build_and_test:
    strategy:
      matrix:
        os: [ubuntu-22.04]
    runs-on: ${{ matrix.os }}
    steps:
      - name: üì• Checkout repository
        uses: actions/checkout@v3

      - name: üß∞ Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.12.0

      - name: üî® Install
        uses: ./.github/actions/install
        with:
          ignore-scripts: ${{ vars.DISABLE_NPM_SCRIPTS || 'false' }}

      - name: üî® Build
        run: |
          yarn workspace @cardano-sdk/cardano-services-client build:cjs
          yarn workspace @cardano-sdk/cardano-services build:cjs
          yarn workspace @cardano-sdk/e2e build:cjs
          yarn workspace @cardano-sdk/util-dev build:cjs
          docker build --no-cache .

      - name: üåê Setup local test network
        working-directory: packages/e2e
        run: |
          yarn local-network:up -d
        env:
          CARDANO_NODE_CHAINDB_LOG_LEVEL: 'Warning'
          CARDANO_NODE_LOG_LEVEL: 'Warning'
          OGMIOS_PORT: '1340'
          OGMIOS_URL: 'ws://ogmios:1340'
          POSTGRES_PORT: '5435'

      - name: Wait for network init
        run: |
          yarn workspace @cardano-sdk/e2e wait-for-network-init

      - name: üî¨ Test - e2e - wallet at epoch 0
        run: |
          yarn workspace @cardano-sdk/e2e test:wallet:epoch0

      - name: Wait for epoch 3
        run: |
          yarn workspace @cardano-sdk/e2e wait-for-network-epoch-3

      - name: üî¨ Test - e2e - wallet at epoch 3
        run: |
          yarn workspace @cardano-sdk/e2e test:wallet:epoch3

      - name: Dump docker logs
        if: ${{ cancelled() || failure() }}
        uses: jwalton/gh-docker-logs@v2
