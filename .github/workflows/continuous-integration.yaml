name: Continuous Integration

on:
  pull_request:
    branches: [ "master" ]
  push:
    branches: [ "master" ]
    tags: [ "*.*.*" ]

jobs:
  build_and_test:
    strategy:
      matrix:
        os: [ ubuntu-20.04 ]
    runs-on: ${{ matrix.os }}
    steps:
    - name: ğŸ“¥ Checkout repository
      uses: actions/checkout@v2.3.3
      with:
        submodules: true

    - name: ğŸ§° Setup Node.js
      uses: actions/setup-node@v1
      with:
        node-version: 14.17

    - name: â†ª Set package version
      id: package-version
      uses: martinbeentjes/npm-get-version-action@master
      with:
        path: .

    - name: ğŸ”¨ Build
      run: |
        yarn install --frozen-lockfile --non-interactive --logevel=error
        yarn build
        yarn lint

    - name: Docker Build
      run: |
        docker build --target http-server -t cardano-services-http-server:${{ github.sha }} .
        docker build --target worker -t cardano-services-worker:${{ github.sha }} .

    - name: ğŸ”¬ Test
      run: |
        yarn test
        yarn test:build:verify

    - name: ğŸ“¦ Pack
      run: |
        ./scripts/pack.sh

    - name: ğŸ“¤ Upload npm packages
      uses: actions/upload-artifact@v3
      with:
        name: cardano-js-sdk-packages
        path: ./cardano-sdk-*-${{ steps.package-version.outputs.current-version}}.tgz
          
    - name: ğŸ“¦ Package Golden Test Generator
      working-directory: packages/golden-test-generator
      run: yarn pkg

    - name: ğŸ“¤ Upload Golden Test Generator exe - Linux
      uses: actions/upload-artifact@v3
      with:
        name: golden-test-generator-linux
        path: ./packages/golden-test-generator/build/golden-test-generator-linux

    - name: ğŸ“¤ Upload Golden Test Generator exe - macOS
      uses: actions/upload-artifact@v3
      with:
        name: golden-test-generator-macos
        path: ./packages/golden-test-generator/build/golden-test-generator-macos
